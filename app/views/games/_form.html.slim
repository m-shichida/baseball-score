- url = game.new_record? ? games_path : game_path

= form_with model: game, url: url do |f|
  .block
    = f.label :matched_at, "#{ t('activerecord.attributes.game.matched_at') }ãƒ»#{ t('activerecord.attributes.game.opponent_team') }"
  .mt-2
    = f.date_select :matched_at, {}, { class: 'appearance-none bg-gray-100 border text-sm border-gray-200 text-gray-800 py-3 px-4 rounded leading-tight focus:outline-none' }
    = f.select :opponent_team_id, team_select_value(@opponent_teams), { include_blank: true }, { class: 'appearance-none bg-gray-100 text-sm border border-gray-200 text-gray-800 py-3 px-4 rounded leading-tight focus:outline-none' }

  .mt-2
    table.border.table-fixed.border-collapse.text-sm
      thead
        tr
          th.border.w-56 = t('view.score_board.team_name')
          th.border.w-10 1
          th.border.w-10 2
          th.border.w-10 3
          th.border.w-10 4
          th.border.w-10 5
          th.border.w-10 6
          th.border.w-10 7
          th.border.w-10 = t('view.score_board.total_score')
      tbody
        = f.fields_for :inning_scores, @inning_scores do |is|
          = is.hidden_field :order, value: InningScore.orders[:top]
          = render 'score_board_fields', f: is, teams: teams

        = f.fields_for :inning_scores, @inning_scores do |is|
          = is.hidden_field :order, value: InningScore.orders[:bottom]
          = render 'score_board_fields', f: is, teams: teams

  .mt-2.p-2.border.w-full
    table.table-fixed.border-collapse.text-sm
      thead
        tr
          th
          th.border.p-1 = t_ar('GameBattingScore.order')
          th.border.p-1 = t_ar('GameBattingScore.position_id')
          th.border.p-1 = t_ar('BatterScore.player_id')
          th.border.p-1 = t_ar('BatterScore.bats')
          th.border.p-1 = t_ar('BatterScore.four_dead_ball')
          th.border.p-1 = t_ar('BatterScore.bunt')
          th.border.p-1 = t_ar('BatterScore.sacrifice_fly')
          th.border.p-1 = t_ar('BatterScore.score')
          th.border.p-1 = t_ar('BatterScore.hit')
          th.border.p-1 = t_ar('BatterScore.rbi')
          th.border.p-1 = t_ar('BatterScore.strikeout')
          th.border.p-1 = t_ar('BatterScore.steal')
          th.border.p-1 = t_ar('BatterScore.two_bases')
          th.border.p-1 = t_ar('BatterScore.three_bases')
          th.border.p-1 = t_ar('BatterScore.homerun')
          th.border.p-1 = t_ar('BatterScore.error')
      tbody
        - 9.times do |t|
          = f.fields_for :batter_scores, @batter_scores do |bs|
            = render 'batter_score_fields', f: bs, order: t + 1

  .mt-2.p-2.border.w-full
    table.table-fixed.border-collapse.text-sm
      thead
        tr
          th
          th.border.p-1 = t_ar('PitcherScore.player_id')
          th.border.p-1 = t_ar('PitcherScore.completion_inning')
          th.border.p-1 = t_ar('PitcherScore.out_count')
          th.border.p-1 = t_ar('PitcherScore.batter_count')
          th.border.p-1 = t_ar('PitcherScore.pitching_count')
          th.border.p-1 = t_ar('PitcherScore.hit')
          th.border.p-1 = t_ar('PitcherScore.homerun')
          th.border.p-1 = t_ar('PitcherScore.strikeout')
          th.border.p-1 = t_ar('PitcherScore.walk_dead_ball')
          th.border.p-1 = t_ar('PitcherScore.self_responsibility')
          th.border.p-1 = t_ar('PitcherScore.wins')
          th.border.p-1 = t_ar('PitcherScore.losses')
          th.border.p-1 = t_ar('PitcherScore.save_count')
          th.border.p-1 = t_ar('PitcherScore.hold_point')
      tbody
        = render 'pitcher_score_fields'

  .flex.justify-end
    = f.submit t('view.button.registrate'), class: 'rounded bg-blue-500 text-sm text-white font-bold py-2 px-4 mt-2 hover:bg-blue-700 focus:outline-none focus:shadow-outline'
